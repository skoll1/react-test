// prototype引用的是作为整个对象类的原型的对象，由这个构造函数创建的任何对象都会继承属性prototype所引用的对象的所有属性。prototype代表了生命体的基因，一旦为基因对象定义染色体，则所有继承该基因的生命体都会有这种特性

// 接口：承诺了类应该实现的功能，相当于合同
// 开发人员实现接口的功能。在编程语言中使用implements关键字。
// 接口的好处：学习TypeScript。
// 1.约束编码，促使代码规范。
// 2.接口实现类之间的通信，不管类之间的功能如何的不同，只要接口相同，就能进行组建之间的通信。

// prptotype一词源自法语，中文翻译为“原型”
// prototype实际上是构造函数特有的属性，该属性仅供构造函数类使用，其他类或对象都无权调用。prototype属性存储着一个引用对象的指针值，该指针指向一个原型对象，他是一个特殊的对象，相当于一个数据集合，内部存储着构造函数的原始模型，即原型和方法，借助prototype属性，我们可以访问原型对象内部的数据，也可以操作他们。

// 在程序中，你可以随时改变构造函数的原型属性值。如果给构造函数定义了与本地同名的本地属性，则本地属性会覆盖原型属性值。如果利用delete方法删除本地属性，则原型属性依然显示出来。
// 一般来说，为构造函数尽量使用原型方法，避免定义本地方法，除非该方法将要访问对象的私有成员或者引用了构造环境中的闭包。
// 
// 继承1：prototype




